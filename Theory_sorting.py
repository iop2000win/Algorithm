'''
=======================================================================================================================
<<<버블 정렬>>>

A B C D E F G
위와 같은 배열이 있을 때,
앞에서부터 두 개의 원소를 선택하여 크기를 비교, 더 작은 수를 앞으로 보내는 방식으로 반복한다.
이럴 경우,

	1. A - B 비교 > 더 작은 수를 앞으로, 더 큰 수를 뒤로 (ex A > B, A와 B의 자리 교환)
	2. [B A C D E F G] > A - C 비교

이렇게 정렬 되는 과정을 보면 작은 숫자가 점점 앞으로 나오는 방식인데, 이 모습이
거품이 위로 올라오는 것과 같다고 해서 붙여진 알고리즘의 이름이다.

이 알고리즘의 경우, 한 번의 순회가 끝났을 때 가장 큰 원소가 배열의 가장 마지막으로 이동하게 된다.
즉, (원소의 갯수 - 1번)만큼 순회를 반복하게 되면 모든 배열이 정렬되는 알고리즘이다.
'''

def bubble_sort(input_list):
	# 반복횟수
	for _ in range(len(input_list)-1):
		# 한 번의 순회동안 확인해야 하는 원소의 갯수(정렬되지 않은 배열의 길이-1)
		l = len(input_list)-1

		for i in range(l):
			if input_list[i] > input_list[i+1]:
				input_list[i], input_list[i+1] = input_list[i+1], input_list[i]

		l -= 1

	return


'''
=======================================================================================================================
<<<선택 정렬>>>

'''